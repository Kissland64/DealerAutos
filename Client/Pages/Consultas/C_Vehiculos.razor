@page "/ConsultaVehiculos"
@inject HttpClient httpClient

<div class="card">
    <div class="card">

        <div class="card-header">
            <h3> Inventario </h3>
        <div class="card-body">
            <form>
                <div class="row">
                <div class="form-group col-3">
                    <label>Desde</label>
                    <InputDate @bind-Value="fechaDesde" class="form-control" />
                </div>
                <div class="form-group col-3">
                    <label>Hasta</label>
                    <InputDate @bind-Value="fechaHasta" class="form-control" />
                </div>
            </div>
            <h1></h1>
                <div class="input-group d-flex align-items-end">
                    <InputSelect class="form-select col-2" @bind-Value="filtro">
                        <option value="0">Sin filtro</option>
                        <option value="1">Usuario Id</option>
                        <option value="2">Nombre Completo</option>
                        <option value="3">Nombre Usuario</option>
                        <option value="4">Email</option>
                        <option value="5">Rol</option>
                    </InputSelect>

                    <div class="flex-fill mx-2">
                        <div class="input-group">
                            <label class="input-group-text"> Busqueda </label>
                            <InputText class="form-control" placeholder = "Igrense el dato necesario para su busqueda" @bind-Value="Criterio" />
                        </div>
                    </div>

                    <button type="button" class="btn btn-sm-10 btn-primary" @onclick="Buscar"> <span class="oi oi-magnifying-glass"></span> Buscar </button>
                </div>
            </form>
        </div>
    </div>
        @if (Listvehiculos is not null)
        {
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Imagen</th>
                        <th>VehiculoId</th>
                        <th>Marca</th>
                        <th>Modelo</th>
                        <th>Tipo</th>
                        <th>AÃ±o</th>
                        <th>Precio</th>
                        <th>Existencia</th>
                        <th>Fecha</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Listvehiculos)
                    {
                        <tr>
                            <th><img src="@item.Imagen" width="110px" height="110px" /></th>
                            <td>@item.VehiculoId</td>
                            <td>@item.Marca</td>
                            <td>@item.Modelo</td>
                            <td>@item.Tipo</td>
                            <td>@item.Anio</td>
                            <td>@item.Precio</td>
                            <td>@item.Existencia</td>
                            <td>@item.Fecha.ToString("dd/MM/yyyy")</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
    <div class="card-footer">
        <div class="form-row justify-content-sm-between" aria-orientation="vertical">
            <div class="col-3">
                <label for="CantidaRegistro" class="col-form-label"><strong>Filas</strong>&nbsp;</label>
                <input id="CantidaRegistro" @bind-value="@conteo" disabled class="form-control" />
            </div>
        </div>
    </div>
</div>

@code {
    private List<Vehiculos> Listvehiculos;
    private List<Vehiculos> ListvehiculosOriginal;
    private int conteo;
    private string filtro = "0";
    private string Criterio;
    private DateTime fechaDesde;
    private DateTime fechaHasta;

    protected override async Task OnInitializedAsync()
    {
        fechaDesde = DateTime.Now.AddMonths(-11);
        fechaHasta = DateTime.Now;
        await Buscar();
    }

    private async Task Buscar()
    {
        ListvehiculosOriginal = await httpClient.GetFromJsonAsync<List<Vehiculos>>("api/Vehiculos");
        Listvehiculos = new List<Vehiculos>(ListvehiculosOriginal);

        if (!string.IsNullOrEmpty(Criterio) && !string.IsNullOrEmpty(filtro))
        {
            switch (filtro)
            {
                case "1":
                    if (int.TryParse(Criterio, out int VehiculoId))
                    {
                        Listvehiculos = Listvehiculos.Where(c => c.VehiculoId == VehiculoId).ToList();
                    }
                    break;
                case "2":
                    Listvehiculos = Listvehiculos.Where(c => c.Marca.Contains(Criterio, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;
                case "3":
                    Listvehiculos = Listvehiculos.Where(c => c.Modelo.Contains(Criterio, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;
                case "4":
                    Listvehiculos = Listvehiculos.Where(c => c.Tipo.Contains(Criterio, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;
                case "5":
                    Listvehiculos = Listvehiculos.Where(c => c.Anio.Contains(Criterio, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;
            }
        }

        Listvehiculos = Listvehiculos
            .Where(c => c.Fecha.Date >= fechaDesde.Date && c.Fecha.Date <= fechaHasta.Date)
            .ToList();

        conteo = Listvehiculos != null ? Listvehiculos.Count() : 0;
    }
}