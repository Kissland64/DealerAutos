@page "/ConsultaVentas"
@inject HttpClient httpClient

<div class="card">
    <div class="card">

        <div class="card-header">
            <h3> Listado de ventas </h3>
        </div>
        <div class="card-body">
            <form>
                <div class="row">
                    <div class="form-group col-3">
                        <label>Desde</label>
                        <InputDate @bind-Value="fechaDesde" class="form-control" />
                    </div>
                    <div class="form-group col-3">
                        <label>Hasta</label>
                        <InputDate @bind-Value="fechaHasta" class="form-control" />
                    </div>
                </div>
                <h1></h1>
                <div class="input-group d-flex align-items-end">
                    <InputSelect class="form-select col-2" @bind-Value="filtro">
                        <option value="0">Sin filtro</option>
                        <option value="1">Venta Id</option>
                        <option value="3">Nombre</option>
                        <option value="4">Apellido</option>
                        <option value="5">Fecha</option>
                        <option value="6">Teléfono</option>
                        <option value="7">Cédula</option>
                        <option value="8">Dirección</option>
                    </InputSelect>

                    <div class="flex-fill mx-2">

                        <div class="input-group">
                            <label class="input-group-text"> Busqueda </label>
                            <InputText class="form-control" placeholder = "Igrense el dato necesario para su busqueda" @bind-Value="Criterio" />
                        </div>

                    </div>

                    <button type="button" class="btn btn-sm-10 btn-primary" @onclick="Buscar"> <span class="oi oi-magnifying-glass"></span> Buscar </button>
                </div>
            </form>
        </div>
        @if (ListVentas is not null)
        {
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Venta Id</th>
                        <th>Nombre</th>
                        <th>Apellido</th>
                        <th>Teléfono</th>
                        <th>Cédula</th>
                        <th>Dirección</th>
                        <th>Fecha</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in ListVentas)
                    {
                        <tr>
                            <td>@item.VentaId</td>
                            <td>@item.Nombre</td>
                            <td>@item.Apellido</td>
                            <td>@item.Telefono</td>
                            <td>@item.Cedula</td>
                            <td>@item.Direccion</td>
                            <td>@item.Fecha.ToString("dd/MM/yyyy")</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
    <div class="card-footer">
        <div class="form-row justify-content-sm-between" aria-orientation="vertical">
            <div class="col-3">
                <label for="CantidaRegistro" class="col-form-label"><strong>Filas</strong>&nbsp;</label>
                <input id="CantidaRegistro" @bind-value="@conteo" disabled class="form-control" />
            </div>
        </div>
    </div>
</div>

@code {
    private List<Ventas> ListVentas;
    private List<Ventas> ListventasOriginal;
    private int conteo;
    private string filtro = "0";
    private string Criterio;
    private DateTime fechaDesde;
    private DateTime fechaHasta;

    protected override async Task OnInitializedAsync()
    {
        fechaDesde = DateTime.Now.AddMonths(-11);
        fechaHasta = DateTime.Now;
        await Buscar();
    }

    private async Task Buscar()
    {
        ListventasOriginal = await httpClient.GetFromJsonAsync<List<Ventas>>("api/Ventas");
        ListVentas = new List<Ventas>(ListventasOriginal);

        if (!string.IsNullOrEmpty(Criterio) && !string.IsNullOrEmpty(filtro))
        {
            switch (filtro)
            {
                case "1":
                    if (int.TryParse(Criterio, out int VentaId))
                    {
                        ListVentas = ListVentas.Where(c => c.VentaId == VentaId).ToList();
                    }
                    break;
                case "2":
                    ListVentas = ListVentas.Where(c => c.Nombre.Contains(Criterio, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;
                case "3":
                    ListVentas = ListVentas.Where(c => c.Apellido.Contains(Criterio, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;
                case "4":
                    ListVentas = ListVentas.Where(c => c.Telefono.Contains(Criterio, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;
                case "5":
                    ListVentas = ListVentas.Where(c => c.Cedula.Contains(Criterio, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;
                case "6":
                    ListVentas = ListVentas.Where(c => c.Direccion.Contains(Criterio, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;
            }
        }

        ListVentas = ListVentas
            .Where(c => c.Fecha.Date >= fechaDesde.Date && c.Fecha.Date <= fechaHasta.Date)
            .ToList();

        conteo = ListVentas != null ? ListVentas.Count() : 0;
    }
}