@page "/ConsultaEmpleados"
@inject HttpClient httpClient

<div class="card">
    <div class="card-header">
        <h3>Consulta de empleados</h3>
    </div>

    <div class="card-body">
        <form>
            <div class="row">
                <div class="form-group col-3">
                </div>
            </div>
            <h1></h1>
            <div class="input-group d-flex align-items-end">
                <InputSelect class="form-select col-2" @bind-Value="filtro">
                    <option value="0">Sin filtro</option>
                    <option value="1">ID de empleado</option>
                    <option value="2">Nombre</option>
                    <option value="3">Apellido</option>
                    <option value="4">DNI</option>
                    <option value="5">Cédula</option>
                    <option value="6">Teléfono</option>
                    <option value="7">Dirección</option>
                </InputSelect>

                <div class="flex-fill mx-2">
                    <div class="input-group">
                        <label class="input-group-text"> Búsqueda </label>
                        <InputText class="form-control" placeholder = "Igrense el dato necesario para su busqueda" @bind-Value="Criterio" />
                    </div>
                </div>

                <button type="button" class="btn btn-sm-10 btn-primary" @onclick="Buscar">
                    <span class="oi oi-magnifying-glass"></span> Buscar
                </button>
            </div>
        </form>
    </div>

    @if (ListEmpleados is not null && ListEmpleados.Any())
    {
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>ID de empleado</th>
                    <th>Nombre</th>
                    <th>Apellido</th>
                    <th>DNI</th>
                    <th>Cédula</th>
                    <th>Teléfono</th>
                    <th>Dirección</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var empleados in ListEmpleados)
                {
                    <tr>
                        <td>@empleados.EmpleadoId</td>
                        <td>@empleados.Nombre</td>
                        <td>@empleados.Apellido</td>
                        <td>@empleados.DNI</td>
                        <td>@empleados.Cedula</td>
                        <td>@empleados.Telefono</td>
                        <td>@empleados.Direccion</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    <div class="card-footer">
        <div class="form-row justify-content-sm-between" aria-orientation="vertical">
            <div class="col-3">
                <label for="CantidaRegistro" class="col-form-label"><strong>Filas</strong>&nbsp;</label>
                <input id="CantidaRegistro" @bind-value="@conteo" disabled class="form-control" />
            </div>
        </div>
    </div>
</div>

@code {
    private List<Empleados> ListEmpleados;
    private List<Empleados> ListEmpleadosOriginal;
    private int conteo;
    private string filtro = "0";
    private string Criterio;

    protected override async Task OnInitializedAsync()
    { await Buscar(); }

    private async Task Buscar()
    {
        ListEmpleadosOriginal = await httpClient.GetFromJsonAsync<List<Empleados>>("api/Empleados");
        ListEmpleados = new List<Empleados>(ListEmpleadosOriginal);

        if (!string.IsNullOrEmpty(Criterio) && !string.IsNullOrEmpty(filtro))
        {
            switch (filtro)
            {
                case "1":
                    if (int.TryParse(Criterio, out int EmpleadoId))
                    {
                        ListEmpleados = ListEmpleados.Where(c => c.EmpleadoId == EmpleadoId).ToList();
                    }
                    break;
                case "2":
                    ListEmpleados = ListEmpleados.Where(c => c.Nombre.Contains(Criterio, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;
                case "3":
                    ListEmpleados = ListEmpleados.Where(c => c.Apellido.Contains(Criterio, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;
                case "4":
                    ListEmpleados = ListEmpleados.Where(c => c.DNI.Contains(Criterio, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;
                case "5":
                    ListEmpleados = ListEmpleados.Where(c => c.Cedula.Contains(Criterio, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;
                case "6":
                    ListEmpleados = ListEmpleados.Where(c => c.Telefono.Contains(Criterio, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;
                case "7":
                    ListEmpleados = ListEmpleados.Where(c => c.Direccion.Contains(Criterio, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;
            }
        }

        conteo = ListEmpleados != null ? ListEmpleados.Count() : 0;
    }
}