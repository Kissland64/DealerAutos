// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DealerAutos.Server.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230731194437_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("Marca", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Existencia")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Imagen")
                        .HasColumnType("TEXT");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MarcaId");

                    b.ToTable("Marca");

                    b.HasData(
                        new
                        {
                            MarcaId = 1,
                            Existencia = 0.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6628),
                            FechaCreacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1915),
                            Imagen = "https://static.vecteezy.com/system/resources/previews/020/335/963/original/honda-logo-honda-icon-free-free-vector.jpg",
                            Modelo = "CR-V",
                            Nombre = "Honda",
                            Tipo = "Jeepeta"
                        },
                        new
                        {
                            MarcaId = 2,
                            Existencia = 0.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6638),
                            FechaCreacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1915),
                            Imagen = "https://static.vecteezy.com/system/resources/previews/020/335/963/original/honda-logo-honda-icon-free-free-vector.jpg",
                            Modelo = "Civic",
                            Nombre = "Honda",
                            Tipo = "Sedán"
                        },
                        new
                        {
                            MarcaId = 3,
                            Existencia = 0.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6640),
                            FechaCreacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1886),
                            Imagen = "https://logowik.com/content/uploads/images/562_audi.jpg",
                            Modelo = "A3 S-Line",
                            Nombre = "Audi",
                            Tipo = "Compacto"
                        },
                        new
                        {
                            MarcaId = 4,
                            Existencia = 0.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6642),
                            FechaCreacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1895),
                            Imagen = "https://www.carlogos.org/logo/Isuzu-logo-1974-3000x3000.png",
                            Modelo = "D-MAX",
                            Nombre = "Isuzu",
                            Tipo = "Camioneta"
                        },
                        new
                        {
                            MarcaId = 5,
                            Existencia = 0.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6644),
                            FechaCreacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1943),
                            Imagen = "https://img.remediosdigitales.com/437262/2009_ford_mustang_badge/450_1000.jpg",
                            Modelo = "PREMIUM",
                            Nombre = "Ford Mustang",
                            Tipo = "Deportivo"
                        },
                        new
                        {
                            MarcaId = 6,
                            Existencia = 0.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6648),
                            FechaCreacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1926),
                            Imagen = "https://memolira.com/wp-content/uploads/2020/08/1600px-Hyundai_26379413755-e1596664023773.jpg",
                            Modelo = "Sonata New Rise",
                            Nombre = "Hyundai",
                            Tipo = "Sedán"
                        },
                        new
                        {
                            MarcaId = 7,
                            Existencia = 0.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6651),
                            FechaCreacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1954),
                            Imagen = "https://static.vecteezy.com/system/resources/previews/009/184/053/original/swm-letter-logo-design-with-polygon-shape-swm-polygon-and-cube-shape-logo-design-swm-hexagon-logo-template-white-and-black-colors-swm-monogram-business-and-real-estate-logo-vector.jpg",
                            Modelo = "G01F",
                            Nombre = "SWM",
                            Tipo = "Jeepeta"
                        },
                        new
                        {
                            MarcaId = 8,
                            Existencia = 0.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6653),
                            FechaCreacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1999),
                            Imagen = "https://w7.pngwing.com/pngs/838/136/png-transparent-2014-chevrolet-corvette-corvette-stingray-car-chevrolet-corvette-z06-car.png",
                            Modelo = "Stingray Z51",
                            Nombre = "Chevrolet Corvette",
                            Tipo = "Deportivo"
                        },
                        new
                        {
                            MarcaId = 9,
                            Existencia = 0.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6655),
                            FechaCreacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1921),
                            Imagen = "https://www.wfla.com/wp-content/uploads/sites/71/2021/03/Kia.jpg?w=1280",
                            Modelo = "Picanto",
                            Nombre = "Kia",
                            Tipo = "Compacto"
                        },
                        new
                        {
                            MarcaId = 10,
                            Existencia = 0.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6658),
                            FechaCreacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1944),
                            Imagen = "https://img.remediosdigitales.com/f31872/logo-mini/450_1000.jpg",
                            Modelo = "Cooper Countryman",
                            Nombre = "Mini",
                            Tipo = "Coupé/Deportivo"
                        });
                });

            modelBuilder.Entity("Vehiculos", b =>
                {
                    b.Property<int>("VehiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Anio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CantidadEnposesion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Existencia")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Imagen")
                        .HasColumnType("TEXT");

                    b.Property<int>("MarcaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.Property<double>("Total")
                        .HasColumnType("REAL");

                    b.HasKey("VehiculoId");

                    b.ToTable("Vehiculos");

                    b.HasData(
                        new
                        {
                            VehiculoId = 1,
                            Anio = "2021",
                            CantidadEnposesion = 0,
                            Descripcion = "",
                            Existencia = 2.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6536),
                            Imagen = "https://www.motortrend.com/uploads/sites/5/2021/06/2021-Honda-CR-V-Touring.jpg",
                            MarcaId = 0,
                            Nombre = "Honda CR-V",
                            Placa = "G520423",
                            Precio = 6745.0,
                            Total = 0.0
                        },
                        new
                        {
                            VehiculoId = 2,
                            Anio = "2022",
                            CantidadEnposesion = 0,
                            Descripcion = "",
                            Existencia = 2.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6558),
                            Imagen = "https://www.yankodesign.com/images/design_news/2022/12/first-drive-new-honda-civic-type-r/2022_Honda_Civic-Type-R_Review_yankodesign_Hero.jpg",
                            MarcaId = 0,
                            Nombre = "Honda Civic",
                            Placa = "J134998",
                            Precio = 5340.0,
                            Total = 0.0
                        },
                        new
                        {
                            VehiculoId = 3,
                            Anio = "2023",
                            CantidadEnposesion = 0,
                            Descripcion = "",
                            Existencia = 2.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6561),
                            Imagen = "https://images.drive.com.au/driveau/image/upload/c_fill,f_auto,g_auto,h_675,q_auto:eco,w_1200/v1/cms/uploads/a7tgfapzsadx4m3zstqm",
                            MarcaId = 0,
                            Nombre = "Isuzu D-MAX",
                            Placa = "H722423",
                            Precio = 8950.0,
                            Total = 0.0
                        },
                        new
                        {
                            VehiculoId = 4,
                            Anio = "2023",
                            CantidadEnposesion = 0,
                            Descripcion = "",
                            Existencia = 2.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6563),
                            Imagen = "https://www.motortrend.com/uploads/2022/05/2023-Audi-A3-003-front-three-quarter-view.jpg",
                            MarcaId = 0,
                            Nombre = "Audi A3 S-Line",
                            Placa = "A432539",
                            Precio = 9500.0,
                            Total = 0.0
                        },
                        new
                        {
                            VehiculoId = 5,
                            Anio = "2010",
                            CantidadEnposesion = 0,
                            Descripcion = "",
                            Existencia = 2.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6565),
                            Imagen = "https://www.gravityautossandysprings.com/galleria_images/2185/2185_main_l.jpg",
                            MarcaId = 0,
                            Nombre = "Ford Mustang PREMIUM",
                            Placa = "E926184",
                            Precio = 6700.0,
                            Total = 0.0
                        },
                        new
                        {
                            VehiculoId = 6,
                            Anio = "2018",
                            CantidadEnposesion = 0,
                            Descripcion = "",
                            Existencia = 2.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6571),
                            Imagen = "https://img.supercarros.com/AdsPhotos/500x500/0/9819611.jpg",
                            MarcaId = 0,
                            Nombre = "Hyundai Sonata New Rise",
                            Placa = "T748510",
                            Precio = 5000.0,
                            Total = 0.0
                        },
                        new
                        {
                            VehiculoId = 7,
                            Anio = "2023",
                            CantidadEnposesion = 0,
                            Descripcion = "",
                            Existencia = 2.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6572),
                            Imagen = "https://espaillatmotors.com/wp-content/uploads/2023/02/1-10-scaled.jpg",
                            MarcaId = 0,
                            Nombre = "SWM G01F",
                            Placa = "P426591",
                            Precio = 7000.0,
                            Total = 0.0
                        },
                        new
                        {
                            VehiculoId = 8,
                            Anio = "2020",
                            CantidadEnposesion = 0,
                            Descripcion = "",
                            Existencia = 2.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6574),
                            Imagen = "https://www.automotiveaddicts.com/wp-content/uploads/2020/11/2020-chevrolet-corvette.jpg",
                            MarcaId = 0,
                            Nombre = "Chevrolet Corvette Stingray Z51",
                            Placa = "F102607",
                            Precio = 9000.0,
                            Total = 0.0
                        },
                        new
                        {
                            VehiculoId = 9,
                            Anio = "2018",
                            CantidadEnposesion = 0,
                            Descripcion = "",
                            Existencia = 2.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6577),
                            Imagen = "https://cdn.motor1.com/images/mgl/YMkY0/s1/lanzamiento-kia-picanto-2018.jpg",
                            MarcaId = 0,
                            Nombre = "Kia Picanto",
                            Placa = "B892415",
                            Precio = 2000.0,
                            Total = 0.0
                        },
                        new
                        {
                            VehiculoId = 10,
                            Anio = "2016",
                            CantidadEnposesion = 0,
                            Descripcion = "",
                            Existencia = 2.0,
                            Fecha = new DateTime(2023, 7, 31, 15, 44, 37, 166, DateTimeKind.Local).AddTicks(6580),
                            Imagen = "https://images.dealersync.com/cloud/userdocumentprod/2539/Photos/739007/20211111220319765_IMG_0941%20%282%29.jpg?_=69a6fb4e56f60fad1b05f3454c24fd6876d54cad",
                            MarcaId = 0,
                            Nombre = "Mini Cooper Countryman",
                            Placa = "A397148",
                            Precio = 3000.0,
                            Total = 0.0
                        });
                });

            modelBuilder.Entity("VehiculosDetalles", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantidadAquirida")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MarcaId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VentaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DetalleId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("VehiculosDetalles");
                });

            modelBuilder.Entity("Ventas", b =>
                {
                    b.Property<int>("VentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DireccionVenta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("VentaId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("VehiculosDetalles", b =>
                {
                    b.HasOne("Vehiculos", null)
                        .WithMany("VehiculosDetalles")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Vehiculos", b =>
                {
                    b.Navigation("VehiculosDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
